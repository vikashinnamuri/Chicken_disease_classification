stages:
  data_ingestion:
    cmd: |
      export PYTHONPATH=$(pwd)/src &&
      python -m src.cnnClassifier.pipeline.stage_01_data_ingestion
    deps:
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
    outs:
      - artifacts/data_ingestion/Chicken-fecal-images

  prepare_base_model:
    cmd: 
      export PYTHONPATH=$(pwd)/src && python -m src.cnnClassifier.pipeline.stage_02_prepare_base_model

    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_based_model    

  training:
    cmd: export PYTHONPATH=$(pwd)/src && python -m src.cnnClassifier.pipeline.stage_03_training
    
    deps:
      - src/cnnClassifier/pipeline/stage_03_training.py
      - src/cnnClassifier/components/prepare_callbacks.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/prepare_based_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5

  evaluation:
    cmd:
     export PYTHONPATH=$(pwd)/src && python -m src.cnnClassifier.pipeline.stage_04_evalution

    deps:
      - src/cnnClassifier/pipeline/stage_04_evalution.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
    - scores.json:
        cache: false